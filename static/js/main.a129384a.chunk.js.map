{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","reset","validate","handleSubmit","preventDefault","props","add","this","onSubmit","type","placeholder","onChange","required","disabled","Component","App","moviesFromServer","addMovie","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a129384a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\n\ntype Props = {\n  add: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    } as Pick<State, keyof State>);\n  };\n\n  reset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  validate = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return !title || !description || !imgUrl || !imdbId || !imdbUrl;\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.add(this.state);\n    this.reset();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imdbId,\n      imgUrl,\n    } = this.state;\n\n    return (\n      <>\n        <h1>Add New Movie</h1>\n        <form\n          className=\"form\"\n          onSubmit={this.handleSubmit}\n        >\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter the title\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Enter Description\"\n            value={description}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"Enter link for the poster\"\n            value={imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"Enter link to the IMDB\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"Enter id of the film on IMDB\"\n            value={imdbId}\n            onChange={this.handleChange}\n            required\n          />\n          <button\n            className=\"button\"\n            type=\"submit\"\n            disabled={this.validate()}\n          >\n            Add New Film\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(prevState => ({\n      movies: [movie, ...prevState.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie add={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}